<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:int="http://www.springframework.org/schema/integration"
        xmlns:int-http="http://www.springframework.org/schema/integration/http"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/integration
       http://www.springframework.org/schema/integration/spring-integration.xsd
       http://www.springframework.org/schema/integration/http
       http://www.springframework.org/schema/integration/http/spring-integration-http.xsd">


    <int:annotation-config/>

    <int:channel id="requestChannel"/>
    <int:channel id="replyChannel"/>
    <int-http:inbound-gateway
            supported-methods="GET"
            request-channel="requestChannel"
            reply-channel="replyChannel"
            path="/services/{method}/{var1}"
            mapped-response-headers="Return-Status, Return-Status-Msg, HTTP_RESPONSE_HEADERS"
            reply-timeout="50000"
            payload-expression="#pathVariables">
        <int-http:request-mapping produces="application/json"/>
    </int-http:inbound-gateway>

    <int-http:inbound-gateway
            supported-methods="GET"
            request-channel="requestChannel"
            reply-channel="replyChannel"
            path="/services/{method}/{var1}/{var2}"
            mapped-response-headers="Return-Status, Return-Status-Msg, HTTP_RESPONSE_HEADERS"
            reply-timeout="50000"
            payload-expression="#pathVariables">
    </int-http:inbound-gateway>

    <int-http:inbound-gateway
            supported-methods="GET"
            request-channel="requestChannel"
            reply-channel="replyChannel"
            path="/services/{method}/{var1}/{var2}/{var3}"
            mapped-response-headers="Return-Status, Return-Status-Msg, HTTP_RESPONSE_HEADERS"
            reply-timeout="50000"
            payload-expression="#pathVariables">
    </int-http:inbound-gateway>

    <int-http:inbound-gateway
            supported-methods="GET"
            request-channel="requestChannel"
            reply-channel="replyChannel"
            path="/services/{method}/{var1}/{var2}/{var3}/{var4}"
            mapped-response-headers="Return-Status, Return-Status-Msg, HTTP_RESPONSE_HEADERS"
            reply-timeout="50000"
            payload-expression="#pathVariables">
    </int-http:inbound-gateway>

    <int:service-activator input-channel="requestChannel"
                           output-channel="replyChannel"
                           ref="channelHandler"
                           method="handleConsumerRequest"
                           requires-reply="true"
                           send-timeout="60000"/>


    <!--catalogs-->
    <int:channel id="catalog.requestChannel"/>
    <int:channel id="catalog.replyChannel"/>
    <int-http:inbound-gateway
            request-channel="catalog.requestChannel"
            reply-channel="catalog.replyChannel"
            supported-methods="GET"
            path="services/catalogs/{var}"
            payload-expression="#pathVariables.var">
    </int-http:inbound-gateway>
    <int:service-activator input-channel="catalog.requestChannel"
                           output-channel="catalog.replyChannel"
                           ref="channelHandler"
                           method="getCatalog"/>

    <!---->
    <!--handling of requests for subscribes consumers-->
    <!---->
    <!--poller-->
    <int:channel id="producer.pollerRequestChannel"/>
    <int:inbound-channel-adapter channel="producer.pollerChannel" expression="''" auto-startup="false">
        <int:poller fixed-delay="10000"/>
    </int:inbound-channel-adapter>
    <int:service-activator
                           input-channel="producer.pollerChannel"
                           ref="channelHandler"
                           method="pollerGetProducerResponse"
                           requires-reply="false"/>

    <!--initiator Producer-->
    <int:channel id="producer.requestChannel"/>
    <int:channel id="producer.replyChannel"/>
    <int-http:inbound-gateway
            request-channel="producer.requestChannel"
            reply-channel="producer.replyChannel"
            supported-methods="POST"

            path="/services/producer/{method}">
        <int-http:header name="method" expression="#pathVariables.method"/>
    </int-http:inbound-gateway>

    <int:service-activator
            input-channel="producer.requestChannel"
            output-channel="producer.replyChannel"
            ref="channelHandler"
            method="handleProducerRequest"
            requires-reply="true"/>

    <int:channel id="consumer.requestChannel"/>
    <int:channel id="consumer.replyChannel"/>

    <int-http:outbound-gateway
            request-channel="consumer.requestChannel"
            reply-channel="consumer.replyChannel"
            http-method="POST"
            expected-response-type="java.lang.String"
            url-expression="headers.consumerUrl">
    </int-http:outbound-gateway>

    <int:service-activator
            input-channel="consumer.replyChannel"
            ref="channelHandler"
            method="commitReplyStatus"
            requires-reply="false"/>

</beans>